//
//  plog.go
//  rlog
//
//  Created by 吴道睿 on 17/2/18.
//  Copyright © 2017年 吴道睿. All rights reserved.
//
package rlog

import(
    "time"
	"encoding/json"
)

/*
    map格式日志输出
    速度较慢
    取消
*/

type Fields map[string]string

var timestampFormat = "20060102 15:04:05.999999"

var lineend= []byte("\n")

//time.RFC3339Nano
//2016-05-15T13:02:40.964514785+08:00
type Entry struct {
	//日志数据信息
	Data Fields
	// 日志时间
	Time time.Time
	// 是否输出本条日志
	l bool
}

func P(lev Level)  *Entry {
	if objLoging.verbosity.get() >= lev {
		e :=  &Entry{
			// Default is 5 fields, give a little extra room
			Data: make(Fields, 5),
			Time : time.Now() ,
			l : true,
		}
		e.Data["timestamp"] = e.Time.Format(timestampFormat)
		return e
	}
	return &Entry{
		// 日志不会被写入输出
		l : false,
	}
}

//记录要输出的信息
func (e *Entry)Info(key string,val string)*Entry{
	e.Data[key]=val
	return e
}

//执行输出日志到文件
func (e *Entry)do(){
	dat,_:= json.Marshal(e.Data)
	buf := objLoging.getBuffer()
	buf.Write(dat)
	buf.Write(lineend)
	objLoging.output_obj(monitor, buf)
}

//输出结构化日志
func (e *Entry)Log(fld Fields)* Entry{
	for k,v := range fld {
		e.Data[k] = v
	}
	return e
}

func (e *Entry)Msg(msg string){
	e.Data["msg"] = msg
    e.do()
	return
}


